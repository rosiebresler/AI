import imaplib
import email
from notion_client import Client

# Email and Notion configuration
EMAIL = "your_email@example.com"
PASSWORD = "your_email_password"
IMAP_SERVER = "imap.gmail.com"
NOTION_TOKEN = "your_notion_token"
NOTION_DATABASE_ID = "your_database_id"

notion = Client(auth=NOTION_TOKEN)


# Function to fetch unseen emails
def fetch_emails():
    # Connect to email server
    mail = imaplib.IMAP4_SSL(IMAP_SERVER)
    mail.login(EMAIL, PASSWORD)
    mail.select("inbox")

    # Search for unseen emails from the bank
    status, messages = mail.search(None, '(UNSEEN FROM "bank@example.com")')
    email_ids = messages[0].split()
    transactions = []

    for email_id in email_ids:
        # Fetch the email content
        status, msg_data = mail.fetch(email_id, "(RFC822)")
        for response_part in msg_data:
            if isinstance(response_part, tuple):
                msg = email.message_from_bytes(response_part[1])
                subject = msg["subject"]
                body = extract_email_body(msg)
                transaction = parse_transaction_details(body)
                if transaction:
                    transactions.append(transaction)

    mail.logout()
    return transactions


# Function to extract email body
def extract_email_body(msg):
    if msg.is_multipart():
        for part in msg.walk():
            if part.get_content_type() == "text/plain":
                return part.get_payload(decode=True).decode()
    else:
        return msg.get_payload(decode=True).decode()


# Function to parse transaction details from email body
def parse_transaction_details(body):
    # Example parsing logic (adjust to your bank's email format)
    lines = body.splitlines()
    transaction = {}
    for line in lines:
        if "Date:" in line:
            transaction["date"] = line.split("Date:")[1].strip()
        elif "Description:" in line:
            transaction["description"] = line.split("Description:")[1].strip()
        elif "Amount:" in line:
            transaction["amount"] = float(line.split("Amount:")[1].strip().replace("$", ""))
        elif "Category:" in line:
            transaction["category"] = line.split("Category:")[1].strip()
    return transaction if "date" in transaction else None


# Function to update Notion database
def update_notion(transactions):
    for transaction in transactions:
        notion.pages.create(
            parent={"database_id": NOTION_DATABASE_ID},
            properties={
                "Date": {"date": {"start": transaction["date"]}},
                "Description": {"title": [{"text": {"content": transaction["description"]}}]},
                "Amount": {"number": transaction["amount"]},
                "Category": {"select": {"name": transaction["category"]}}
            }
        )
        print(f"Added transaction: {transaction['description']}")


# Main function
def main():
    transactions = fetch_emails()
    if transactions:
        update_notion(transactions)
    else:
        print("No new transactions found.")


if __name__ == "__main__":
    main()
